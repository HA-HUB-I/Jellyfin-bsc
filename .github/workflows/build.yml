name: Build and Release Jellyfin Plugin

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.1)'
        required: true
        default: '1.0.1'
      create_release:
        description: 'Create GitHub Release'
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Determine version
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref }}" =~ ^refs/tags/v ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Building tag release: v$VERSION"
          else
            VERSION="${{ github.event.inputs.version }}"
            echo "version=$VERSION" >> $GITHUB_OUTPUT
            echo "Building manual release: v$VERSION"
          fi

      - name: Restore dependencies
        run: dotnet restore

      - name: Build plugin
        run: dotnet build --configuration Release

      - name: Prepare package
        run: |
          PLUGIN_DIR="Jellyfin.Plugin.BulsatcomChannel"
          mkdir -p "dist/${PLUGIN_DIR}"
          cp "bin/Release/net8.0/${PLUGIN_DIR}.dll" "dist/${PLUGIN_DIR}/"
          cp plugin.xml "dist/${PLUGIN_DIR}/"

      - name: Create zip archive
        run: |
          cd dist
          zip -r ../plugin.zip .

      - name: Calculate MD5 checksum
        id: checksum
        run: |
          MD5_HASH=$(md5sum plugin.zip | cut -d ' ' -f 1)
          echo "md5=${MD5_HASH^^}" >> $GITHUB_OUTPUT
          echo "MD5 checksum: ${MD5_HASH^^}"

      - name: Update manifest
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          MD5_HASH="${{ steps.checksum.outputs.md5 }}"
          TIMESTAMP=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
          
          echo "Updating manifest with:"
          echo "  Version: $VERSION"
          echo "  Checksum: $MD5_HASH"
          echo "  Timestamp: $TIMESTAMP"
          
          # Update manifest.json
          jq --arg version "$VERSION" \
             --arg checksum "$MD5_HASH" \
             --arg timestamp "$TIMESTAMP" \
             --arg sourceUrl "https://github.com/HA-HUB-I/Jellyfin-bsc/releases/download/v$VERSION/plugin.zip" \
             '.[0].versions[0].version = $version | 
              .[0].versions[0].checksum = $checksum | 
              .[0].versions[0].timestamp = $timestamp |
              .[0].versions[0].sourceUrl = $sourceUrl' \
             manifest.json > manifest_updated.json && mv manifest_updated.json manifest.json
          
          echo "Updated manifest.json:"
          cat manifest.json

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jellyfin-plugin-v${{ steps.version.outputs.version }}
          path: |
            plugin.zip
            manifest.json

      - name: Create/Update Release
        if: github.event.inputs.create_release == 'true' || startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.version.outputs.version }}
          name: "Jellyfin Bulsatcom Plugin v${{ steps.version.outputs.version }}"
          body: |
            ## Jellyfin Bulsatcom File Generator Plugin v${{ steps.version.outputs.version }}
            
            ### Installation Instructions
            
            1. **Via Plugin Repository (Recommended):**
               - Add repository URL: `https://raw.githubusercontent.com/HA-HUB-I/Jellyfin-bsc/main/manifest.json`
               - Install from Jellyfin Plugin Catalog
            
            2. **Manual Installation:**
               - Download `plugin.zip` from this release
               - Extract to your Jellyfin plugins directory
               - Restart Jellyfin
            
            ### Configuration
            - Go to Plugins â†’ Bulsatcom File Generator â†’ Settings
            - Enter your Bulsatcom credentials
            - Configure refresh intervals and file settings
            
            ### Files Generated
            - M3U Playlist: `bulsat.m3u`
            - EPG XML: `bulsat.xml` 
            
            **MD5 Checksum:** `${{ steps.checksum.outputs.md5 }}`
          files: plugin.zip
          draft: false
          prerelease: false

      - name: Commit updated manifest
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add manifest.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸ”„ Update manifest for v${{ steps.version.outputs.version }} - checksum: ${{ steps.checksum.outputs.md5 }}"
            git push
